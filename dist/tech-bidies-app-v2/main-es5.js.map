{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert/alert.component.ts","webpack:///src/app/_components/alert/alert.component.html","webpack:///src/app/_helpers/auth.guard.service.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/jwt.interceptor.service.ts","webpack:///src/app/_pipes/truncare-text.pipe.ts","webpack:///src/app/_services/post-query.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog-create/blog-create.component.ts","webpack:///src/app/blog-create/blog-create.component.html","webpack:///src/app/blog/blog.component.ts","webpack:///src/app/blog/blog.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/forum/forum.component.ts","webpack:///src/app/forum/forum.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/alert.service.ts","webpack:///src/app/login/auth-service.service.ts","webpack:///src/app/login/forgot-password/forgot-password.component.ts","webpack:///src/app/login/forgot-password/forgot-password.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material-module.ts","webpack:///src/app/post-detail/post-detail.component.ts","webpack:///src/app/post-detail/post-detail.component.html","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/sections/sections.component.ts","webpack:///src/app/sections/sections.component.html","webpack:///src/app/topic-detail/topic-detail.component.ts","webpack:///src/app/topic-detail/topic-detail.component.html","webpack:///src/app/topic-list/topic-list.component.ts","webpack:///src/app/topic-list/topic-list.component.html","webpack:///src/app/update-profile/update-profile.component.ts","webpack:///src/app/update-profile/update-profile.component.html","webpack:///src/app/user-details/user-details.component.ts","webpack:///src/app/user-details/user-details.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","alertService","subscription","getAlert","subscribe","message","type","cssClass","unsubscribe","selector","templateUrl","styleUrls","AuthGuardService","router","authenticationService","http","url","route","state","console","log","currentUser","navigate","queryParams","returnUrl","post","pipe","user","localStorage","setItem","JSON","stringify","providedIn","ErrorInterceptor","request","next","handle","err","status","logout","location","reload","error","statusText","JwtInterceptorService","currentUserValue","token","clone","setHeaders","Authorization","TruncateTextPipe","value","limit","trail","result","words","split","length","Math","abs","slice","join","name","PostQueryService","headers","set","query","data","reportProgress","observe","category","get","email","content","postFile","description","formData","FormData","append","errorMessage","ErrorEvent","UserService","firstName","lastName","company","aboutMe","myFile","password","AboutComponent","routes","path","component","canActivate","children","redirectTo","AppRoutingModule","forRoot","onSameUrlNavigation","imports","AppComponent","userService","title","x","getUserDetails","res","AppModule","provide","useClass","multi","useValue","appearance","declarations","providers","bootstrap","BlogCreateComponent","formBuilder","postQueryService","users","percentDone","posts","categories","Posts","editorConfig","editable","spellcheck","height","minHeight","maxHeight","width","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","getCategories","postContent","group","required","shortDescription","event","file","target","files","patchValue","updateValueAndValidity","reader","FileReader","onload","preview","readAsDataURL","addPost","Sent","ResponseHeader","UploadProgress","round","loaded","total","Response","body","alert","onSubmit","uploadFile","BlogComponent","topics","showCreate","groups","threads","getTopicGroups","getMyPostThreads","getRecentTopics","getPostGroups","getRecentPosts","relativeTo","toggleShow","ContactComponent","loadingR","rsubmitted","queryForm","subject","messageText","minLength","phone","invalid","postQuery","sendStatus","reset","controls","ForumComponent","Topics","getMyTopicThreads","topicContent","subcategory","addTopic","push","close","getTopics","_id","HomeComponent","loggedIn","navigationSubscription","events","initialiseInvites","AlertService","keepAfterRouteChange","clear","asObservable","text","AuthServiceService","currentUserSubject","parse","getItem","floor","random","removeItem","ForgotPasswordComponent","loadingL","lsubmitted","passwordUpdateMsg","verifyErrorMsg","verifyCheck","passwordErrorMsg","forgotPasswordForm","snapshot","f","forgotPassword","verifyCode","confirmPassword","resetPassword","LoginComponent","step","index","loginForm","registerForm","login","register","success","onRegister","MyMaterialModule","PostDetailComponent","showReplyForm","params","postId","getPost","getPostById","comment","postData","Date","addPostsComment","commentReply","addPostsCommentReply","filename","arr","goToUserProfile","onComment","PostsComponent","getPosts","RegisterComponent","SectionsComponent","TopicDetailComponent","topic","topicId","getTopic","getTopicById","addComment","addTopicsCommentReply","goBack","TopicListComponent","like","UpdateProfileComponent","photo","profileData","updateProfile","UserDetailsComponent","gerUserProfile","getUserThreads","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../../login/alert.service';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n      this.subscription = this.alertService.getAlert()\n          .subscribe(message => {\n              switch (message && message.type) {\n                  case 'success':\n                      message.cssClass = 'alert alert-success';\n                      break;\n                  case 'error':\n                      message.cssClass = 'alert alert-danger';\n                      break;\n              }\n\n              this.message = message;\n          });\n  }\n\n  ngOnDestroy() {\n      this.subscription.unsubscribe();\n  }\n\n}\n","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { AuthServiceService } from '../login/auth-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  // public url =\"https://talentmitra-o5ryx.ondigitalocean.app\";\n  public url = '';\n  constructor(\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private http: HttpClient\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      console.log(\"came to canActivate\");\n      // this.isAuthenticated();\n      const currentUser = this.authenticationService.currentUser;\n      if (currentUser) {\n      // authorised so return true\n      return true;\n      }\n\n      \n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/'], { queryParams: { returnUrl: state.url }});\n      return false;\n      }\n\n\n      isAuthenticated() {\n        return this.http.post<any>(`${this.url}/user/getUserDetails`, { })\n        .pipe(map(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            console.log(user);\n            return user;\n        }));\n      }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthServiceService } from '../login/auth-service.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthServiceService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthServiceService } from '../login/auth-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  constructor(private authenticationService: AuthServiceService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      // add authorization header with jwt token if available\n      let currentUser = this.authenticationService.currentUserValue;\n      if (currentUser && currentUser.token) {\n          request = request.clone({\n              setHeaders: {\n                  Authorization: `Bearer ${currentUser.token}`\n              }\n          });\n      }\n\n      return next.handle(request);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncateText'\n})\nexport class TruncateTextPipe implements PipeTransform {\n\n  transform(value: string, limit: number, trail: String = '…'): string {\n    let result = value || '';\n\n    if (value) {\n      const words = value.split(/\\s+/);\n      if (words.length > Math.abs(limit)) {\n        if (limit < 0) {\n          limit *= -1;\n          result =\n            trail + words.slice(words.length - limit, words.length).join(' ');\n        } else {\n          result = words.slice(0, limit).join(' ') + trail;\n        }\n      }\n    }\n\n    return result;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpErrorResponse, HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { QueryMessage } from '../_models/query';\nimport { Post } from '../_models/post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostQueryService {\n  private currentUserSubject: BehaviorSubject<QueryMessage>;\n  public currentQuery: Observable<QueryMessage>;\n  public url = '';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  postQuery(query) {\n    return this.http.post<Post>(`${this.url}/query`, query)\n      .pipe(map(data => {\n\n        return data;\n      }));\n  }\n\n  // Forum methods\n\n  addTopic(data, token): Observable<any> {\n    return this.http.post<any>(`${this.url}/content/addTopic?secret_token=` + token, data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  addComment(data, token): Observable<any> {\n    return this.http.post<any>(`${this.url}/content/topicComment?secret_token=` + token, data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  addTopicsCommentReply(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(`${this.url}/content/topicCommentReply?secret_token=` + token, data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  getTopics(category, token) {\n    if (category) {\n      return this.http.get(this.url + '/content/category-topics/' + category + '?secret_token=' + token);\n    }\n    return this.http.get(this.url + '/content/allTopics?secret_token=' + token);\n  }\n\n  getTopicById(id, token) {\n    console.log(this.url + '/content/topic/' + id);\n    return this.http.get(this.url + '/content/topic/' + id + '?secret_token=' + token);\n  }\n\n  getTopicGroups(token) {\n    return this.http.get(this.url + '/content/topic-groups?secret_token=' + token);\n  }\n\n\n\n  getMyTopicThreads(token) {\n    return this.http.get(this.url + '/content/my-topic-threads?secret_token=' + token);\n  }\n\n  getUserThreads(email, token) {\n    return this.http.get(this.url + '/content/user-post-threads/' + email +'?secret_token=' + token);\n  }\n\n  // Forum methods end\n\n\n  // Blog methods\n\n  addPost(content: string, category: string, postFile: File, description: string, token: string): Observable<any> {\n    var formData: any = new FormData();\n    formData.append(\"content\", content);\n    formData.append(\"category\", category);\n    formData.append(\"myFile\", postFile);\n    formData.append(\"shortDescription\", description);\n\n    return this.http.post<any>(`${this.url}/content/addPost?secret_token=` + token, formData, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  addPostsComment(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(`${this.url}/content/postComment?secret_token=` + token, data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  addPostsCommentReply(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(`${this.url}/content/postCommentReply?secret_token=` + token, data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  getMyPostThreads(token) {\n    return this.http.get(this.url + '/content/my-post-threads?secret_token=' + token);\n  }\n\n  getPostGroups(token) {\n    return this.http.get(this.url + '/content/post-groups?secret_token=' + token);\n  }\n\n  getRecentPosts(token) {\n    return this.http.get(this.url + '/content/recent-posts?secret_token=' + token);\n  }\n\n  getPostById(id, token) {\n    console.log(this.url + '/content/post/' + id);\n    return this.http.get(this.url + '/content/post/' + id + '?secret_token=' + token);\n  }\n\n  getPosts(category, token) {\n    if (category) {\n      return this.http.get(this.url + '/content/category-posts/' + category + '?secret_token=' + token);\n    }\n    return this.http.get(this.url + '/content/posts?secret_token=' + token);\n  }\n\n  getCategoryPosts(token) {\n    return this.http.get(this.url + '/content/category-posts?secret_token=' + token);\n  }\n\n  getCategories(token) {\n    return this.http.get(this.url + '/content/categories?secret_token=' + token);\n  }\n\n  // Blog methods end\n\n\n  // Error handling \n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  like() {\n    return this.http.get(this.url + '/content/like');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpErrorResponse, HttpClient  } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public url = '';\n\n  constructor(private http: HttpClient) { }\n\n  updateProfile(data, token): Observable<any> {\n    console.log(data);\n    var formData: any = new FormData();\n    formData.append(\"firstName\", data.firstName);\n    formData.append(\"lastName\", data.lastName);\n    formData.append(\"email\", data.email);\n    formData.append(\"company\",data.company );\n    formData.append(\"aboutMe\", data.aboutMe );\n    formData.append(\"myFile\", data.myFile);\n    formData.append(\"password\", data.password);\n    return this.http.post<any>(`${this.url}/user/updateUser?secret_token=`+ token, formData)    \n    .pipe(map(data => {\n      return data;\n  }));\n  }\n\n  getUserDetails( token) {\n    return this.http.get(this.url+'/user/details?secret_token='+ token);\n  }\n\n  gerUserProfile(id, token) {\n    return this.http.get(this.url+'/user/profile/'+ id+'?secret_token='+ token);\n  }\n\n\n       // Error handling \n       errorMgmt(error: HttpErrorResponse) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n          // Get client-side error\n          errorMessage = error.error.message;\n        } else {\n          // Get server-side error\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n      }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9\">\n            <div class=\"tab-content\" id=\"myTabContentMD\">\n                <div class=\"tab-pane  active\" id=\"aboutUs-md\" role=\"tabpanel\" aria-labelledby=\"aboutUs-tab-md\">\n                    <h5 class=\"card-title\">About Us</h5>\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">Some quick example text to build on the panel title and make up the\n                                bulk of the\n                                panel's content.</p>\n                            <a class=\"card-link\">Card link</a>\n                            <a class=\"card-link\">Another link</a>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"tab-pane fade\" id=\"advisory-md\" role=\"tabpanel\" aria-labelledby=\"advisory-tab-md\">\n                        <h5 class=\"card-title\">Team</h5>\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-5\">\n                                    <div class=\"card\">\n                                        <div class=\"view overlay\">\n                                            <img class=\"card-img-top\"\n                                                src=\"https://mdbootstrap.com/img/Photos/Others/photo6.jpg\"\n                                                alt=\"Card image cap\">\n                                            <a href=\"#!\">\n                                                <div class=\"mask rgba-white-slight\"></div>\n                                            </a>\n                                        </div>\n                                        <div class=\"card-body\">\n                                            <h4 class=\"card-title\">Card title</h4>\n                                            <p class=\"card-text\">Some quick example text to build on the card title and\n                                                make up\n                                                the bulk of the card's\n                                                content.</p>\n                                            <a href=\"#\" class=\"btn btn-primary\">Button</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-2\"></div>\n                                <div class=\"col-sm-5\">\n                                    <div class=\"card\">\n                                        <div class=\"view overlay\">\n                                            <img class=\"card-img-top\"\n                                                src=\"https://mdbootstrap.com/img/Mockups/Lightbox/Thumbnail/img%20(67).jpg\"\n                                                alt=\"Card image cap\">\n                                            <a href=\"#!\">\n                                                <div class=\"mask rgba-white-slight\"></div>\n                                            </a>\n                                        </div>\n                                        <div class=\"card-body\">\n                                            <h4 class=\"card-title\">Card title</h4>\n                                            <p class=\"card-text\">Some quick example text to build on the card title and\n                                                make up\n                                                the bulk of the card's\n                                                content.</p>\n                                            <a href=\"#\" class=\"btn btn-primary\">Button</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"card\">\n                <!-- <div class=\"card-header\">\n                    Featured\n                </div> -->\n                <ul class=\"list-group nav list-group-flush  rgba-grey-dark\" role=\"tablist\">\n                    <li class=\"list-group-item nav-item \">\n                        <a class=\"nav-link active \" id=\"aboutUs-tab-md\" data-toggle=\"tab\" href=\"#aboutUs-md\" role=\"tab\"\n                            aria-controls=\"aboutUs-md\" aria-selected=\"true\">About Us</a>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <a class=\"nav-link  \" id=\"advisory-tab-md\" data-toggle=\"tab\" href=\"#advisory-md\" role=\"tab\"\n                            aria-controls=\"advisory-md\" aria-selected=\"true\">Team</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuardService } from './_helpers/auth.guard.service';\nimport { AboutComponent } from './about/about.component';\nimport { SectionsComponent } from './sections/sections.component';\nimport { ForgotPasswordComponent } from './login/forgot-password/forgot-password.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { ForumComponent } from './forum/forum.component';\nimport { PostDetailComponent } from './post-detail/post-detail.component';\nimport { TopicDetailComponent } from './topic-detail/topic-detail.component';\nimport { TopicListComponent } from './topic-list/topic-list.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { BlogCreateComponent } from './blog-create/blog-create.component';\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuardService] },\n  { path: 'about', component: AboutComponent },\n  { path: 'sections', component: SectionsComponent },\n  { path: 'forgot', component: ForgotPasswordComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'profile', component: UpdateProfileComponent },\n  { \n    path: 'blogs', \n    component: BlogComponent,\n    children: [\n      {path: '', component: PostsComponent},\n      {path: 'posts/:id', component: PostsComponent},\n      {path: 'post-detail/:id', component: PostDetailComponent},\n      {path: 'profile/:id', component: UserDetailsComponent}\n    ] \n  },\n  { \n    path: 'forum', \n    component: ForumComponent,\n    children: [\n    {path: '', component: TopicListComponent},\n    {path: 'topic-list/:id', component: TopicListComponent},\n    {path: 'topic-detail/:id', component: TopicDetailComponent},\n  ] \n  },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'} )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthServiceService } from './login/auth-service.service';\nimport { UserService } from './_services/user.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tech-bidies-app-v2';\n  currentUser: any;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthServiceService,\n      private userService: UserService\n  ) {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n      if (this.currentUser) {\n        this.getUserDetails();\n      }\n      // if(!this.currentUser) this.router.navigate(['/login']);\n  }\n\n  getUserDetails() {\n    this.userService.getUserDetails(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.currentUser['user'] = res['user'];\n    })\n  }\n\n  logout() {\n      this.authenticationService.logout();\n      this.router.navigate(['/']);\n  }\n}\n","<header id=\"header\" style=\"height: 250px\">\n  <div class=\"container-fluid\">\n\n    <div id=\"top-social\">\n      <a href=\"https://www.facebook.com/dev.portal.90\" target=\"_blank\"><i class=\"fab fa-facebook-f\"></i></a>\n      <a href=\"http://twitter.com/\" target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\n      <a href=\"http://instagram.com/\" target=\"_blank\"><i class=\"fab fa-instagram\"></i></a>\n      <a href=\"http://pinterest.com/\" target=\"_blank\"><i class=\"fab fa-pinterest\"></i></a>\n    </div>\n\n    <!-- <div _ngcontent-ynr-c289=\"\" id=\"logo\">\n\n      <h1 _ngcontent-ynr-c289=\"\" style=\"\n            padding-bottom: 5px;\n        \"><a _ngcontent-ynr-c289=\"\" href=\"#\" style=\"\n            color: black;\n            font-size: 45px;\n        \">𝚃𝚊𝚕𝚎𝚗𝚝𝚖𝚒𝚝𝚛𝚊\n        </a></h1>\n      <h3 _ngcontent-ynr-c289=\"\" style=\"\n        \"><a _ngcontent-ynr-c289=\"\" href=\"#\" class=\"\" style=\"\n            color: #b6e2ab;\n            font-size: 12px;\n        \">▁ ▂ ▄ ▅ ▆ ▇ █\n        </a><a _ngcontent-ynr-c289=\"\" href=\"#\" class=\"\" style=\"\n            margin-top: 12px!important;\n            color: #770f0f;\n            font-size: 12px;\n        \">Ｆｏｌｌｏｗ Ｙｏｕｒ Ｂｌｉｓｓ\n        </a><a _ngcontent-ynr-c289=\"\" href=\"#\" class=\"\" style=\"\n            color: #b6e2ab;\n            font-size: 13px;\n        \"> █ ▇ ▆ ▅ ▄ ▂ ▁\n        </a></h3>\n      <h1 _ngcontent-ynr-c289=\"\" style=\"\n            padding-top: 17px;\n        \"><a _ngcontent-ynr-c289=\"\" href=\"#\" style=\"\n            color: #d42f2f;\n            font-size: 15px;\n        \">☆☆\n        </a>\n        <a _ngcontent-ynr-c289=\"\" href=\"#\" style=\"\n            color: #529c10;\n            font-size: 15px;\n        \">★\n        </a>\n        <a _ngcontent-ynr-c289=\"\" href=\"#\" style=\"\n            color: #d42f2f;\n            font-size: 15px;\n        \">☆☆\n        </a></h1>\n    </div> -->\n    <div id=\"logo\">\n\n      <h1><a href=\"#\"><img src=\"../assets/images/bg.jpg\" alt=\"Talentmitra\" style=\"width: 250%;height: 200px;\"></a>\n      </h1>\n\n    </div>\n\n    <div id=\"top-search\">\n\n    </div>\n\n  </div>\n</header>\n\n\n<!-- Navbar -->\n<nav class=\"navbar sticky-top navbar-expand-lg black lighter-4 navbar-dark scrolling-navbar\" style=\"height: 62px\">\n  <div class=\"container\">\n\n    <!-- Brand -->\n\n    <!-- Collapse -->\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <!-- Links -->\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n      <!-- Left -->\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"\">Home\n            <span class=\"sr-only\">(current)</span>\n          </a>\n        </li>\n        <!-- <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"sections\" *ngIf=\"currentUser\">Chapters</a>\n            </li> -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"blogs\" *ngIf=\"currentUser\">Blogs</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"forum\" *ngIf=\"currentUser\">Forum</a>\n        </li>\n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"about\">About Us</a>\n        </li> -->\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"contact\">Contact Us</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\"></a>\n        </li>\n\n\n      </ul>\n\n      <!-- Right -->\n      <ul class=\"navbar-nav nav-flex-icons my-2 my-lg-0 ml-auto\">\n        <li class=\"nav-item dropdown\" *ngIf=\"currentUser\">\n          <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            *ngIf=\"currentUser.user\">{{currentUser.user.firstName?currentUser.user.firstName+' '+currentUser.user.lastName : currentUser.user.email}}</a>\n          <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n            aria-expanded=\"false\" *ngIf=\"!currentUser.user\">Hello Guest</a>\n          <div class=\"dropdown-menu dropdown-primary\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"profile\">Update Profile</a>\n          </div>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"currentUser\">\n          <a class=\"nav-item nav-link\" *ngIf=\"currentUser\" (click)=\"logout()\">Logout</a>\n        </li>\n      </ul>\n\n    </div>\n\n  </div>\n</nav>\n<!-- Navbar -->\n<div class=\"container-fluid px-0\" style=\"margin-bottom:12rem;\">\n  <router-outlet></router-outlet>\n</div>\n<!--Footer-->\n<footer class=\"page-footer text-center font-small mt-4 \" style=\"width:100%\">\n\n\n  <hr class=\"my-1\">\n\n  <!-- Social icons -->\n  <div class=\"pb-4\">\n    <a>\n      <i class=\"fab fa-facebook-f mr-3\"></i>\n    </a>\n\n    <a href=\"#\">\n      <i class=\"fab fa-twitter mr-3\"></i>\n    </a>\n\n    <a href=\"#\">\n      <i class=\"fab fa-youtube mr-3\"></i>\n    </a>\n\n    <a href=\"#\">\n      <i class=\"fab fa-google-plus-g mr-3\"></i>\n    </a>\n\n\n    <a href=\"#\">\n      <i class=\"fab fa-pinterest mr-3\"></i>\n    </a>\n\n    <a href=\"#\">\n      <i class=\"fab fa-github mr-3\"></i>\n    </a>\n\n  </div>\n  <!-- Social icons -->\n\n  <!--Copyright-->\n  <div class=\"footer-copyright py-2\">\n    © 2021 Copyright:\n    <span class=\"white-text\">\n      Techbirdies\n    </span>\n\n  </div>\n  <!--/.Copyright-->\n\n</footer>\n<!--/.Footer-->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MyMaterialModule} from './material-module';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { HashLocationStrategy, LocationStrategy  } from '@angular/common';\n\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\n\n\nimport { AlertService } from './login/alert.service';\nimport { AuthServiceService } from './login/auth-service.service';\nimport { AuthGuardService } from './_helpers/auth.guard.service';\nimport { JwtInterceptorService } from './_helpers/jwt.interceptor.service';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\n\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AlertComponent } from './_components/alert/alert.component';\nimport { AboutComponent } from './about/about.component';\nimport { SectionsComponent } from './sections/sections.component';\nimport { ForgotPasswordComponent } from './login/forgot-password/forgot-password.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { ForumComponent } from './forum/forum.component';\nimport { PostDetailComponent } from './post-detail/post-detail.component';\nimport { TopicListComponent } from './topic-list/topic-list.component';\nimport { TopicDetailComponent } from './topic-detail/topic-detail.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { BlogCreateComponent } from './blog-create/blog-create.component';\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { TruncateTextPipe } from './_pipes/truncare-text.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    AlertComponent,\n    AboutComponent,\n    SectionsComponent,\n    ForgotPasswordComponent,\n    ContactComponent,\n    PostsComponent,\n    ForumComponent,\n    PostDetailComponent,\n    TopicListComponent,\n    TopicDetailComponent,\n    BlogComponent,\n    BlogCreateComponent,\n    UpdateProfileComponent,\n    UserDetailsComponent,\n    TruncateTextPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MyMaterialModule,\n    FormsModule,\n    AngularEditorModule\n  ],\n  providers: [AlertService, AuthServiceService, AuthGuardService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptorService, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    {provide : LocationStrategy , useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\nimport { User } from '../_models/user';\nimport { Post } from '../_models/post';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\n@Component({\n  selector: 'app-blog-create',\n  templateUrl: './blog-create.component.html',\n  styleUrls: ['./blog-create.component.css']\n})\nexport class BlogCreateComponent implements OnInit {\n  currentUser: any;\n  users = [];\n  postContent: FormGroup;\n  preview: string;\n  percentDone: any = 0;\n  posts = [];\n  categories: any = [];\n  Posts: any = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private postQueryService: PostQueryService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) this.router.navigate(['/']);\n  }\n\n  ngOnInit() {\n    this.getCategories();\n    this.postContent = this.formBuilder.group({\n      content: ['', Validators.required],\n      category: ['', Validators.required],\n      shortDescription: ['',Validators.required],\n      myFile: [Validators.required]\n    });\n  }\n\n  getCategories() {\n    this.postQueryService.getCategories(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.categories = res;\n    });\n  }\n\n  uploadFile(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.postContent.patchValue({\n      myFile: file\n    });\n    this.postContent.get('myFile').updateValueAndValidity()\n\n    // File Preview\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.preview = reader.result as string;\n    }\n    reader.readAsDataURL(file)\n  }\n\n  onSubmit() {\n    this.postQueryService.addPost(\n      this.postContent.value.content,\n      this.postContent.value.category,\n      this.postContent.value.myFile,\n      this.postContent.value.shortDescription,\n      this.currentUser.token\n    ).subscribe((event: HttpEvent<any>) => {\n      console.log(event);\n      \n      switch (event.type) {\n        case HttpEventType.Sent:\n          console.log('Request has been made!');\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log('Response header has been received!');\n          break;\n        case HttpEventType.UploadProgress:\n          this.percentDone = Math.round(event.loaded / event.total * 100);\n          console.log(`Uploaded! ${this.percentDone}%`);\n          break;\n        case HttpEventType.Response:\n          console.log('Post successfully created!', event.body);\n          alert(event.body.message);\n          this.router.navigate(['']);\n          this.percentDone = false;\n      }\n    })\n  }\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: 'auto',\n    minHeight: '0',\n    maxHeight: 'auto',\n    width: 'auto',\n    minWidth: '0',\n    translate: 'yes',\n    enableToolbar: true,\n    showToolbar: true,\n    placeholder: 'Enter text here...',\n    defaultParagraphSeparator: '',\n    defaultFontName: '',\n    defaultFontSize: '',\n    fonts: [\n      { class: 'arial', name: 'Arial' },\n      { class: 'times-new-roman', name: 'Times New Roman' },\n      { class: 'calibri', name: 'Calibri' },\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\n    ],\n    customClasses: [\n      {\n        name: 'quote',\n        class: 'quote',\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: 'titleText',\n        class: 'titleText',\n        tag: 'h1',\n      },\n    ],\n    uploadUrl: 'v1/image',\n    uploadWithCredentials: false,\n    sanitize: true,\n    toolbarPosition: 'top',\n    toolbarHiddenButtons: [\n\n    ]\n  };\n\n\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"postContent\" (ngSubmit)=\"onSubmit()\" name=\"form1\">\n        <div class=\"row  align-items-center mb-4\">\n            <label for=\"category\" class=\"col-sm-4\">Category</label><br>\n            <div class=\"text-center mb-3 col-sm-8 form-group\">\n                <!-- <input type=\"text\" formControlName=\"category\" class=\"form-control\"> -->\n                <select name=\"category\" id=\"category\" class=\"form-control\" formControlName=\"category\" required>\n                    <option value=\"\" disabled=\"\" selected=\"\">Select Category</option>\n                    <option [value]=\"category.name\" *ngFor=\"let category of categories\">{{category.name}}</option>\n                </select>\n            </div><br>\n            <label for=\"category\" class=\"col-sm-4\">Short Description</label><br>\n            <div class=\"text-center mb-3 col-sm-8 form-group\">\n                <input type=\"text\" formControlName=\"shortDescription\" class=\"form-control\" required>\n            </div><br>\n            <div class=\"text-center mb-3 col-md-12 form-group\">\n                <angular-editor formControlName=\"content\" [config]=\"editorConfig\"></angular-editor>\n            </div>\n            <div class=\"text-center mb-3 col-md-4 form-group\">\n                <!-- File Input -->\n                <div class=\"form-group\">\n                    <input type=\"file\" (change)=\"uploadFile($event)\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row  align-items-center mb-4\">\n            <div class=\"text-center mb-3 col-md-3 form-group\">\n                <button  class=\"btn btn-pink btn-rounded btn-block btn-rounded z-depth-1\">\n                    Post</button>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { User } from '../_models/user';\nimport { Topic } from '../_models/topic';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  currentUser: any;\n  users = [];\n  topicContent: FormGroup;\n  topics = [];\n  posts: any = [];\n  showCreate: boolean = false;\n  groups: any = [];\n  threads: any =[];\n  category: any = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private postQueryService: PostQueryService,\n    private route: ActivatedRoute\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) this.router.navigate(['/']);\n  }\n\n\n  ngOnInit(): void {\n    this.getTopicGroups();\n    this.getMyPostThreads();\n    this.getRecentTopics();\n  }\n\n  toggleShow() {\n    this.showCreate = !this.showCreate;\n  }\n\n  close() {\n    this.showCreate = false;\n  }\n\n  getTopicGroups() {\n    this.postQueryService.getPostGroups(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.groups = res;\n    });\n  }\n\n  getRecentTopics() {\n    this.postQueryService.getRecentPosts(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.posts = res;\n    });\n  }\n\n  getMyPostThreads() {\n    this.postQueryService.getMyPostThreads(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.threads = res;\n    });\n  }\n\n  gotoPostsByCategory(id) {\n    this.router.navigate(['posts/'+id], {relativeTo: this.route});\n    // this.router.navigate(['blogs/'+id]);\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['blogs/post-detail/'+id]);\n  }\n\n}\n","<div class=\"container\" style=\"margin-top:3rem\">\n    <div class=\"row\">\n        <div class=\"col-sm-4 col-lg-4 col-xs-4\"></div>\n        <div class=\"col-sm-4 col-lg-4 col-xs-4\">\n            <div class=\"pull-right\" style=\"float: right;display:none\">\n                <div class=\"input-group mb-3\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search Topics\"\n                        aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n                    <div class=\"input-group-append\">\n                        <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-search\"></i></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"container\">\n\n    <!--Section: Post-->\n    <section class=\"mt-1\">\n\n        <!--Grid row-->\n        <div class=\"row\">\n\n            <!--Grid column-->\n            <div class=\"col-md-9 mb-4\">\n                <div class=\"post\" *ngIf=\"showCreate\" style=\"border:1px solid #eee;padding:1rem 2rem\">\n                    <div class=\"px-2\" style=\"float:right\"><i class=\"fa fa-times red-text\" (click)=\"close()\"></i></div>\n                    <app-blog-create></app-blog-create>\n                </div>\n                <!--Card-->\n                <router-outlet></router-outlet>\n                <!--/.Card-->\n            </div>\n            <!--Grid column-->\n\n            <!--Grid column-->\n            <div class=\"col-md-3 mb-4 pl-4\">\n\n                <div class=\"mb-4\">\n                    <div class=\"mb-3 col-md-12 form-group\">\n                        <button class=\"btn teal btn-md white-text\" (click)=\"toggleShow()\">Start New Topic</button>\n                    </div>\n                </div>\n\n                <!--Card-->\n                <div class=\"mb-4 widget\">\n\n                    <h4 class=\"widget-title\">Recent Posts</h4>\n\n                    <!--Card content-->\n                    <div class=\"side-pop list\">\n\n                        <ul class=\"list-unstyled\" style=\"font-size:x-small\">\n                            <li class=\"media my-2\" *ngFor=\"let post of posts\">\n                                <div class=\"media-body\">\n                                    <div class=\"side-pop-img\" style=\"height: 50px;width:50px\">\n                                        <a href=\"javascript:void(0)\" (click)=\"gotoDetails(post._id)\" rel=\"bookmark\">\n                                            <img width=\"350\" height=\"300\" [src]=\"post.myFile\" *ngIf=\"post.myFile\"\n                                                class=\"attachment-side-thumb size-side-thumb wp-post-image rounded-circle\"\n                                                style=\"height: 40px;width:40px\">\n                                            <img width=\"350\" height=\"300\" src=\"../../assets/images/pen.png\"\n                                                *ngIf=\"!post.myFile\"\n                                                class=\"attachment-side-thumb size-side-thumb wp-post-image rounded-circle\"\n                                                style=\"height: 40px;width:40px\">\n                                        </a>\n                                    </div>\n                                    <div class=\"side-pop-content\">\n                                        <h4>\n                                            <a href=\"javascript:void(0)\" (click)=\"gotoDetails(post._id)\">\n                                                {{post.shortDescription|uppercase}}\n                                            </a>\n                                        </h4>\n                                        <!-- <p [innerHTML]=\"post.content|truncateText:10\"\n                                            style=\"font-size:0.7rem!important\">\n                                        </p> -->\n                                        <span class=\"date\">{{post.postedOn| date:\"MMM d, y\"}}</span>\n                                    </div>\n\n                                </div>\n                            </li>\n                        </ul>\n\n                    </div>\n\n                </div>\n                <!--/.Card-->\n                <!--Card-->\n\n                <div id=\"categories-2\" class=\"widget widget_categories\">\n                    <h4 class=\"widget-title\">Categories</h4>\n                    <ul>\n                        <li class=\"cat-item cat-item-2\" *ngFor=\"let group of groups\"><a\n                                (click)=\"gotoPostsByCategory(group._id)\" href=\"javascript:void(0)\">{{group._id}}</a>\n                            ({{group.count}})\n                        </li>\n                    </ul>\n                </div>\n\n\n                <div class=\"widget mb-4\">\n\n                    <div class=\"widget-title\">My articles</div>\n\n                    <!--Card content-->\n                    <div class=\"side-pop list\">\n\n                        <ul class=\"list-unstyled\" style=\"font-size:x-small\">\n                            <li class=\"media my-2\" *ngFor=\"let thread of threads\">\n                                <!-- <img class=\"d-flex mr-3\"\n                                    src=\"https://mdbootstrap.com/img/Photos/Others/placeholder7.jpg\"\n                                    alt=\"Generic placeholder image\" style=\"height:20px\"> -->\n                                <div class=\"side-pop-content\">\n                                    <h4>\n                                        <a href=\"javascript:void(0)\" (click)=\"gotoDetails(thread._id)\">\n                                            {{thread.shortDescription|uppercase}}\n                                        </a>\n                                    </h4>\n                                    <span class=\"date\">{{thread.postedOn| date:\"MMM d, y\"}}</span>\n                                    <!-- <p [innerHTML]=\"thread.content|truncateText:20\" style=\"font-size:0.7rem!important\">\n                                    </p> -->\n                                </div>\n                            </li>\n                        </ul>\n\n                    </div>\n\n                </div>\n                <!--/.Card-->\n\n            </div>\n            <!--Grid column-->\n\n        </div>\n        <!--Grid row-->\n\n    </section>\n    <!--Section: Post-->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n\nimport { PostQueryService } from '../_services/post-query.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  queryForm: FormGroup;\n  loadingR = false;\n  rsubmitted = false;\n  returnUrl: string;\n  sendStatus:boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private postQueryService: PostQueryService\n    ) { }\n\n  ngOnInit(): void {\n    this.queryForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      subject: ['', Validators.required],\n      messageText: ['', [Validators.required, Validators.minLength(6)]],\n      phone: [''],\n      company: ['']\n  });\n  }\n\n  get r() { return this.queryForm.controls; }\n\n  onSubmit() {\n    this.rsubmitted = true;\n\n    // stop here if form is invalid\n    if (this.queryForm.invalid) {\n        return;\n    }\n\n    this.loadingR = true;\n    this.postQueryService.postQuery(this.queryForm.value)\n        .pipe(first())\n        .subscribe(\n            data => {\n                if(data['sendStatus']) alert(\"Query Sent Successfully\");\n                this.sendStatus= true;\n                this.loadingR = false;\n                this.queryForm.reset();\n            },\n            error => {\n                this.loadingR = false;\n            });\n}\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9\">\n            <div class=\"tab-content\" id=\"myTabContentMD\">\n                <div class=\"tab-pane  active\" id=\"contact-md\" role=\"tabpanel\" aria-labelledby=\"contact-tab-md\">\n                    <h5 class=\"card-title\">Contact Us</h5>\n                    <div class=\"card\" style=\"margin-top: 3rem\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">Some quick example text to build on the panel title and make up the\n                                bulk of the\n                                panel's content.</p>\n                            <a class=\"card-link\">Card link</a>\n                            <a class=\"card-link\">Another link</a>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"tab-pane fade\" id=\"send-md\" role=\"tabpanel\" aria-labelledby=\"send-tab-md\">\n                    <h5 class=\"card-title\">Send Query</h5>\n\n                    <!-- Section: Contact v.3 -->\n                    <section class=\"contact-section my-5\">\n\n                        <!-- Form with header -->\n                        <div class=\"card\">\n\n                            <!-- Grid row -->\n                            <div class=\"row\">\n\n                                <!-- Grid column -->\n                                <div class=\"col-lg-7\">\n\n                                    <div class=\"card-body form\">\n\n                                        <!-- Header -->\n                                        <h3 class=\"mt-4\"><i class=\"fas fa-envelope pr-2\"></i>Write to us:</h3>\n                                        <form [formGroup]=\"queryForm\" (ngSubmit)=\"onSubmit()\" name=\"form1\">\n                                            <!-- Grid row -->\n                                            <div class=\"row\">\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <input type=\"text\" formControlName=\"name\" class=\"form-control\"\n                                                            [ngClass]=\"{ 'is-invalid': rsubmitted && r.name.errors }\">\n                                                        <label for=\"name\" class=\"\">Your name</label>\n                                                        <div *ngIf=\"rsubmitted && r.name.errors\"\n                                                            class=\"invalid-feedback\">\n                                                            <div *ngIf=\"r.name.errors.required\">Name is required</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                                                            [ngClass]=\"{ 'is-invalid': rsubmitted && r.email.errors }\">\n                                                        <label for=\"email\" class=\"\">Your Email</label>\n                                                        <div *ngIf=\"rsubmitted && r.email.errors\"\n                                                            class=\"invalid-feedback\">\n                                                            <div *ngIf=\"r.email.errors.required\">Email is required</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                            </div>\n                                            <!-- Grid row -->\n\n                                            <!-- Grid row -->\n                                            <div class=\"row\">\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <input type=\"phone\" formControlName=\"phone\"\n                                                            class=\"form-control\">\n                                                        <label for=\"phone\" class=\"\">Phone</label>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <input type=\"text\" formControlName=\"company\"\n                                                            class=\"form-control\">\n                                                        <label for=\"company\" class=\"\">Your company</label>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                            </div>\n                                            <!-- Grid row -->\n                                            <div class=\"row\">\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-12\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <input type=\"text\" formControlName=\"subject\"\n                                                            class=\"form-control\"\n                                                            [ngClass]=\"{ 'is-invalid': rsubmitted && r.subject.errors }\">\n                                                        <label for=\"subject\" class=\"\">Your Subject</label>\n                                                        <div *ngIf=\"rsubmitted && r.subject.errors\"\n                                                            class=\"invalid-feedback\">\n                                                            <div *ngIf=\"r.subject.errors.required\">Subject is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                            </div>\n                                            <!-- Grid row -->\n                                            <div class=\"row\">\n\n                                                <!-- Grid column -->\n                                                <div class=\"col-md-12\">\n                                                    <div class=\"md-form mb-0\">\n                                                        <textarea formControlName=\"messageText\"\n                                                            class=\"form-control md-textarea\" rows=\"3\"\n                                                            [ngClass]=\"{ 'is-invalid': rsubmitted && r.messageText.errors }\"></textarea>\n                                                        <label for=\"messageText\">Your message</label>\n                                                        <div *ngIf=\"rsubmitted && r.messageText.errors\"\n                                                            class=\"invalid-feedback\">\n                                                            <div *ngIf=\"r.messageText.errors.required\">email is required\n                                                            </div>\n                                                        </div>\n                                                        <button class=\"btn-floating btn-lg blue\" [disabled]=\"loadingR\">\n                                                            <i class=\"far fa-paper-plane\"></i>\n                                                            <span *ngIf=\"loadingR\"\n                                                                class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <!-- Grid column -->\n\n                                            </div>\n                                            <!-- Grid row -->\n                                        </form>\n                                        <div *ngIf=\"sendStatus\">\n                                            <h5>Your Query is successfully sent. We'll get back to you Shortly</h5>\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <!-- Grid column -->\n\n                                <!-- Grid column -->\n                                <div class=\"col-lg-5\">\n\n                                    <div class=\"card-body contact text-center blue white-text\">\n\n                                        <h3 class=\"my-4 pb-2\">Contact information</h3>\n                                        <ul class=\"text-lg-left list-unstyled ml-4\">\n                                            <li>\n                                                <p><i class=\"fas fa-map-marker-alt pr-2\"></i>Bangalore, 560102, India\n                                                </p>\n                                            </li>\n                                            <li>\n                                                <p><i class=\"fas fa-phone pr-2\"></i>+91 9876543210</p>\n                                            </li>\n                                            <li>\n                                                <p><i class=\"fas fa-envelope pr-2\"></i>contactus@gmail.com</p>\n                                            </li>\n                                        </ul>\n                                        <hr class=\"hr-light my-4\">\n                                        <ul class=\"list-inline text-center list-unstyled\">\n                                            <li class=\"list-inline-item\">\n                                                <a class=\"p-2 fa-lg tw-ic\">\n                                                    <i class=\"fab fa-twitter\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a class=\"p-2 fa-lg li-ic\">\n                                                    <i class=\"fab fa-linkedin-in\"> </i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a class=\"p-2 fa-lg ins-ic\">\n                                                    <i class=\"fab fa-instagram\"> </i>\n                                                </a>\n                                            </li>\n                                        </ul>\n\n                                    </div>\n\n                                </div>\n                                <!-- Grid column -->\n\n                            </div>\n                            <!-- Grid row -->\n\n                        </div>\n                        <!-- Form with header -->\n\n                    </section>\n                    <!-- Section: Contact v.3 -->\n\n\n\n\n\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-3\" style=\"padding-top: 4.5rem;\">\n            <div class=\"card\">\n                <ul class=\"list-group nav list-group-flush  rgba-grey-dark\" role=\"tablist\">\n                    <li class=\"list-group-item\">\n                        <a class=\"nav-link  \" id=\"send-tab-md\" data-toggle=\"tab\" href=\"#send-md\" role=\"tab\"\n                            aria-controls=\"send-md\" aria-selected=\"true\">Send Query</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { User } from '../_models/user';\nimport { Topic } from '../_models/topic';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './forum.component.html',\n  styleUrls: ['./forum.component.css']\n})\nexport class ForumComponent implements OnInit {\n  currentUser: any;\n  users = [];\n  topicContent: FormGroup;\n  topics = [];\n  Topics: any = [];\n  showCreate: boolean = false;\n  groups: any = [];\n  categories: any = [];\n  threads: any =[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private postQueryService: PostQueryService,\n    private route: ActivatedRoute\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) this.router.navigate(['/']);\n  }\n\n  ngOnInit(): void {\n    this.getTopicGroups();\n    this.getMyTopicThreads();\n    this.topicContent = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      category: ['', Validators.required],\n      subcategory: ['', Validators.required]\n    });\n  }\n  \n  toggleShow() {\n    this.showCreate = !this.showCreate;\n  }\n\n  close() {\n    this.showCreate = false;\n  }\n  onSubmit() {\n\n    this.postQueryService.addTopic(\n      this.topicContent.value,\n      this.currentUser.token\n    ).subscribe((data) => {\n      this.Topics.push(data);\n      this.close();\n    });\n  }\n\n  getCategories() {\n    this.postQueryService.getCategories(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.categories = res;\n    });\n  }\n\n  getTopics() {\n    this.postQueryService.getTopics('', this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.Topics = res;\n    });\n  }\n\n  getTopicGroups() {\n    this.postQueryService.getTopicGroups(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.groups = res;\n    });\n  }\n\n  getMyTopicThreads() {\n    this.postQueryService.getMyTopicThreads(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.threads = res;\n    });\n  }\n\n  gotoPostsByCategory(id) {\n    console.log(id);\n    this.router.navigate(['topic-list/'+id], {relativeTo: this.route});\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['forum/topic-detail/'+id]);\n  }\n\n}\n","<section class=\"content\" style=\"margin-top:3rem\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-4 col-lg-4 col-xs-4\"></div>\n            <div class=\"col-sm-4 col-lg-4 col-xs-4\">\n                <div class=\"pull-right\" style=\"float: right;display:none\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search Topics\"\n                            aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-search\"></i></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-4 col-lg-4 col-xs-4\" style=\"float: right;\">\n                <div class=\"text-center mb-3 col-md-12 form-group\">\n                    <button class=\"btn teal btn-md white-text\" (click)=\"toggleShow()\">Start New Topic</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-md-8\">\n\n                <!-- create posts -->\n                <div class=\"post\" *ngIf=\"showCreate\">\n                    <div class=\"pull-right px-2\"><i class=\"fa fa-times red-text\" (click)=\"close()\"></i></div>\n                    <form [formGroup]=\"topicContent\" (ngSubmit)=\"onSubmit()\" name=\"form1\" class=\"form newtopic\">\n                        <div class=\"topwrap\">\n                            <div class=\"userinfo pull-left\">\n                                <div class=\"avatar\">\n                                    <img src=\"images/avatar4.jpg\" alt=\"\">\n                                    <div class=\"status red\">&nbsp;</div>\n                                </div>\n\n                                <div class=\"icons\">\n                                    <img src=\"images/icon3.jpg\" alt=\"\"><img src=\"images/icon4.jpg\" alt=\"\"><img\n                                        src=\"images/icon5.jpg\" alt=\"\"><img src=\"images/icon6.jpg\" alt=\"\">\n                                </div>\n                            </div>\n                            <div class=\"posttext pull-left\">\n                                <div>\n                                    <input type=\"text\" placeholder=\"Enter Topic Title\" class=\"form-control\"\n                                        formControlName=\"title\">\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-6 col-md-6\">\n                                        <select name=\"category\" id=\"category\" class=\"form-control\" formControlName=\"category\">\n                                                <option value=\"\" disabled=\"\" selected=\"\">Select Category</option>\n                                                <option [value]=\"group._id\" *ngFor=\"let group of groups\">{{group._id}}</option>\n                                            </select>\n                                        <input type=\"text\" placeholder=\"Category\" class=\"form-control\"\n                                            formControlName=\"category\">\n                                    </div>\n                                    <div class=\"col-lg-6 col-md-6\">\n                                        <input type=\"text\" placeholder=\"Sub-Category\" class=\"form-control\"\n                                            formControlName=\"subcategory\">\n\n                                        <!-- <select name=\"subcategory\" id=\"subcategory\" class=\"form-control\">\n                                                <option value=\"\" disabled=\"\" selected=\"\">Select Subcategory</option>\n                                                <option value=\"op1\">Option1</option>\n                                                <option value=\"op2\">Option2</option>\n                                            </select> -->\n                                    </div>\n                                </div>\n                                <div>\n                                    <textarea name=\"desc\" id=\"desc\" placeholder=\"Description\" class=\"form-control\"\n                                        formControlName=\"description\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                        <div class=\"postinfobot\">\n                            <div class=\"notechbox pull-left\">\n                                <input type=\"checkbox\" name=\"note\" id=\"note\" class=\"form-control\">\n                            </div>\n                            <div class=\"pull-left\">\n                                <label for=\"note\"> Email me when some one post a reply</label>\n                            </div>\n                            <div class=\"pull-right postreply\">\n                                <div class=\"pull-left\"><button type=\"submit\" class=\"btn btn-primary\">Post</button></div>\n                                <div class=\"clearfix\"></div>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                    </form>\n                </div>\n                <!-- create post -->\n\n                <!-- POST -->\n                <router-outlet></router-outlet>\n\n                <!-- POST -->\n\n            </div>\n            <div class=\"col-lg-4 col-md-4\">\n                <!-- -->\n                <div class=\"sidebarblock\">\n                    <h3>Groups</h3>\n                    <div class=\"divline\"></div>\n                    <div class=\"blocktxt\">\n                        <ul class=\"groups\">\n                            <li *ngFor=\"let group of groups\">\n                                <a (click)=\"gotoPostsByCategory(group._id)\" href=\"javascript:void(0)\">{{group._id}}\n                                    <span class=\"badge pull-right\">{{group.count}}</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- -->\n                <div class=\"sidebarblock\">\n                    <h3>My Active Threads</h3>\n                    <div class=\"divline\"></div>\n                    <div *ngFor=\"let thread of threads\">\n                        <div class=\"blocktxt\">\n                            <a href=\"javascript:void(0)\" (click)=\"gotoDetails(thread._id)\">{{thread.title}}</a>\n                        </div>\n                        <div class=\"divline\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</section>","// https://www.positronx.io/angular-8-express-file-upload-tutorial-with-reactive-forms/\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\nimport { User } from '../_models/user';\nimport { Post } from '../_models/post';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\nimport {DomSanitizationService} from '@angular/platform-browser/esm2015';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy  {\n  navigationSubscription;\n  currentUser: User;\n  loggedIn: boolean = false;\n  Posts: any = [];\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private postQueryService: PostQueryService,\n    private route: ActivatedRoute\n  ) {\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.initialiseInvites();\n      }\n    });\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) {\n      this.loggedIn = false;\n    } else {\n      this.loggedIn = true;\n    }\n  }\n\n  initialiseInvites() {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) {\n      this.loggedIn = false;\n    } else {\n      this.loggedIn = true;\n      this.getRecentTopics();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n\n   }\n\n  // getPosts() {\n  //   this.postQueryService.getPosts('', this.currentUser.token).subscribe((res) => {\n  //     this.Posts = res['posts'];\n  //   })\n  // }\n\n  getRecentTopics() {\n    this.postQueryService.getRecentPosts(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.Posts = res;\n    });\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['blogs/post-detail/'+id]);\n  }\n\n}\n","<!-- Full Page Intro -->\n<div class=\"container-fluid\"   style=\"background:linear-gradient(218deg, #d8c3c3, #ffff0099); background-repeat: no-repeat; background-size: cover;\">\n    <div class=\"jumbotron jumbotron-fluid\" style=\"height: 350px;background:linear-gradient(\n      218deg\n      , #a77070, #79790399)!important\">\n        <div class=\"container\">\n          <div class=\"row pt-5\">\n            <div class=\"col-sm-4 text-center\">\n              <i class=\"fab fa-connectdevelop fa-6x\" style=\"color:maroon\"></i>\n              <div class=\"pt-5 talentmitra-goal\">Connect with peers, mentors, companies. Ask for career guidance.</div>\n            </div>\n            <div class=\"col-sm-4 text-center px-2\">\n                <i class=\"fas fa-comments fa-6x\" style=\"color:#176273\"></i>\n                <div class=\"pt-5 talentmitra-goal\">We give you freedom to share your views.</div>\n            </div>\n            <div class=\"col-sm-4 text-center\">\n                <i class=\"fas fa-seedling fa-6x\" style=\"color:#1a651a\"></i>\n                <div class=\"pt-5 talentmitra-goal\">We help you grow in your career, keep you updated with the latest technologies.</div>\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n\n<div class=\" full-page-intro ml-auto\"\n  style=\" background-repeat: no-repeat; background-size: cover;\">\n\n  <!-- Mask & flexbox options-->\n  <div class=\"mask d-flex justify-content-center align-items-center;\">\n    <!-- Content -->\n    <div class=\"container\" style=\"margin-top:3rem\">\n\n      <!--Grid row-->\n      <div class=\"row \">\n\n        <!--Grid column-->\n        <div class=\"col-md-8 mb-4  white-text text-center text-md-left pr-4\" *ngIf=\"loggedIn\">\n          <div id=\"carouselExampleFade\" class=\"carousel slide \" data-ride=\"carousel\">\n            <ol class=\"carousel-indicators\">\n              <li data-target=\"#carousel-example-1z\" data-slide-to=\"0\" class=\"active\"></li>\n              <li data-target=\"#carousel-example-1z\" data-slide-to=\"1\"></li>\n              <li data-target=\"#carousel-example-1z\" data-slide-to=\"2\"></li>\n            </ol>\n            <div class=\"carousel-inner\" *ngIf=\"Posts.length\">\n              <div class=\"carousel-item active\" (click)=\"gotoDetails(Posts[0]._id)\">\n                <div class=\"view\">\n                  <img class=\"d-block w-80\" [src]=\"Posts[0].myFile\" alt=\"First slide\" style=\"width: 100%\">\n                  <div class=\"mask rgba-black-light\"></div>\n                </div>\n                <div class=\"carousel-caption\">\n                  <h3 class=\"h3-responsive\">{{Posts[0].shortDescription}}</h3>\n                  <p [innerHTML]=\"Posts[0].content|truncateText:30\"></p>\n                </div>\n              </div>\n              <div class=\"carousel-item\" (click)=\"gotoDetails(Posts[1]._id)\">\n                <div class=\"view\">\n                  <img class=\"d-block w-80\" [src]=\"Posts[1].myFile\" alt=\"Second slide\" style=\"width: 100%\">\n                  <div class=\"mask rgba-black-light\"></div>\n                </div>\n                <div class=\"carousel-caption\">\n                  <h3 class=\"h3-responsive\">{{Posts[1].shortDescription}}</h3>\n                  <p [innerHTML]=\"Posts[1].content|truncateText:30\"></p>\n                </div>\n              </div>\n              <div class=\"carousel-item\" (click)=\"gotoDetails(Posts[2]._id)\">\n                <div class=\"view\">\n                  <img class=\"d-block w-100\" [src]=\"Posts[2].myFile\" alt=\"Third slide\" style=\"width: 100%\">\n                  <div class=\"mask rgba-black-light\"></div>\n                </div>\n                <div class=\"carousel-caption\">\n                  <h3 class=\"h3-responsive\">{{Posts[2].shortDescription}}</h3>\n                  <p [innerHTML]=\"Posts[2].content|truncateText:30\"></p>\n                </div>\n              </div>\n            </div>\n            <a class=\"carousel-control-prev\" href=\"#carouselExampleFade\" role=\"button\" data-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n            <a class=\"carousel-control-next\" href=\"#carouselExampleFade\" role=\"button\" data-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </div>\n\n\n        </div>\n        <!--Grid column-->\n\n        <!--Grid column-->\n        <div class=\"col-md-4  mb-4\" *ngIf=\"!loggedIn\">\n          <app-login></app-login>\n        </div>\n        <div class=\"col-md-4  mb-4\" *ngIf=\"loggedIn\">\n          <div class=\"mb-4 widget\">\n\n            <h4 class=\"widget-title\">Recent Posts</h4>\n\n            <!--Card content-->\n            <div class=\"side-pop list\">\n\n              <ul class=\"list-unstyled\" style=\"font-size:x-small\">\n                <li class=\"media my-2\" *ngFor=\"let post of Posts\">\n                  <div class=\"media-body\">\n                    <div class=\"side-pop-img\" style=\"height: 50px;width:50px\">\n                      <a href=\"javascript:void(0)\" (click)=\"gotoDetails(post._id)\" rel=\"bookmark\">\n                        <img width=\"350\" height=\"300\" [src]=\"post.myFile\" *ngIf=\"post.myFile\"\n                          class=\"attachment-side-thumb size-side-thumb wp-post-image rounded-circle\"\n                          style=\"height: 40px;width:40px\">\n                        <img width=\"350\" height=\"300\" src=\"../../assets/images/pen.png\" *ngIf=\"!post.myFile\"\n                          class=\"attachment-side-thumb size-side-thumb wp-post-image rounded-circle\"\n                          style=\"height: 40px;width:40px\">\n                      </a>\n                    </div>\n                    <div class=\"side-pop-content\">\n                      <h4>\n                        <a href=\"javascript:void(0)\" (click)=\"gotoDetails(post._id)\">\n                          {{post.shortDescription|uppercase}}\n                        </a>\n                      </h4>\n                      <!-- <p [innerHTML]=\"post.content|truncateText:10\"\n                                        style=\"font-size:0.7rem!important\">\n                                    </p> -->\n                      <span class=\"date\">{{post.postedOn| date:\"MMM d, y\"}}</span>\n                    </div>\n\n                  </div>\n                </li>\n              </ul>\n\n            </div>\n\n          </div>\n          <div id=\"talentmitra_about_widget-2\" class=\"widget talentmitra_about_widget\">\n            <h4 class=\"widget-title\">About Me</h4>\n            <div class=\"about-widget\">\n\n              <div class=\"about-img\">\n                <a href=\"\">\n                  <img src=\"https://res.cloudinary.com/techbirdies/image/upload/v1622943572/user-profiles/pbrbkeydvojgi4qm44bm.jpg\" alt=\"About Me\" style=\"width:258px;height:172px\">\n                </a>\n              </div>\n\n              <p>Continuosly learning and always ready to help others learn too.</p>\n\n              <span class=\"about-autograph\"><img\n                  src=\"../../assets/images/signature.png\" alt=\"\" style=\"width:174px;height:32px\"></span>\n\n            </div>\n\n          </div>\n          <div id=\"talentmitra_social_widget-2\" class=\"widget talentmitra_social_widget\">\n            <h4 class=\"widget-title\">Subscribe &amp; Follow</h4>\n            <div class=\"social-widget\">\n              <a href=\"http://facebook.com/dev.portal.9\" target=\"_blank\"><i class=\"fab fa-facebook\"></i></a>\n              <a href=\"http://twitter.com\" target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\n              <a href=\"http://instagram.com\" target=\"_blank\"><i class=\"fab fa-instagram\"></i></a> <a\n                href=\"http://pinterest.com\" target=\"_blank\"><i class=\"fab fa-pinterest\"></i></a> <a\n                href=\"http://bloglovin.com/#\" target=\"_blank\"><i class=\"fa fa-heart\"></i></a> <a href=\"#\"\n                target=\"_blank\"><i class=\"fa fa-rss\"></i></a>\n            </div>\n\n\n          </div>\n          <div id=\"talentmitra_facebook_widget_facebook_widget-2\" class=\"notitle noborder widget talentmitra_facebook_widget_facebook_widget\">\n            <div id=\"fb-root\" class=\" fb_reset\">\n              <div style=\"position: absolute; top: -10000px; width: 0px; height: 0px;\">\n                <div></div>\n              </div>\n            </div>\n            <script>(function (d, s, id) {\n                var js, fjs = d.getElementsByTagName(s)[0];\n                if (d.getElementById(id)) return;\n                js = d.createElement(s); js.id = id;\n                js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3\";\n                fjs.parentNode.insertBefore(js, fjs);\n              }(document, 'script', 'facebook-jssdk'));</script>\n            <div class=\"fb-page fb_iframe_widget\" data-href=\"http://www.facebook.com/dev.portal.90\"\n              data-hide-cover=\"false\" data-show-facepile=\"true\" data-show-posts=\"false\" fb-xfbml-state=\"rendered\"\n              fb-iframe-plugin-query=\"app_id=&amp;container_width=300&amp;hide_cover=false&amp;href=http%3A%2F%2Fwww.facebook.com%2Fdev.portal.90&amp;locale=en_US&amp;sdk=joey&amp;show_facepile=true&amp;show_posts=false\">\n              <span style=\"vertical-align: bottom; width: 300px; height: 130px;\"><iframe name=\"f1e4bb99bf0b65a\"\n                  width=\"1000px\" height=\"1000px\" data-testid=\"fb:page Facebook Social Plugin\"\n                  title=\"fb:page Facebook Social Plugin\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\"\n                  scrolling=\"no\" allow=\"encrypted-media\"\n                  src=\"https://www.facebook.com/v2.3/plugins/page.php?app_id=&amp;channel=https%3A%2F%2Fstaticxx.facebook.com%2Fx%2Fconnect%2Fxd_arbiter%2F%3Fversion%3D46%23cb%3Df1f94f2f1da0014%26domain%3Dtalentmitra.com%26origin%3Dhttps%253A%252F%252Ftalentmitra.com%252Ff2707c22fcb1ef6%26relation%3Dparent.parent&amp;container_width=300&amp;hide_cover=false&amp;href=http%3A%2F%2Fwww.facebook.com%2Fdev.portal.90&amp;locale=en_US&amp;sdk=joey&amp;show_facepile=true&amp;show_posts=false\"\n                  class=\"\" style=\"border: none; visibility: visible; width: 300px; height: 130px;\"></iframe></span>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<main>\n  <div class=\"container\">\n    <section class=\"mt-5\">\n\n    </section>\n    <!--Section: Main info-->\n\n    <hr class=\"my-5\">\n\n  </div>\n</main>\n<!--Main layout-->","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<any>();\n  private keepAfterRouteChange = false;\n\n  constructor(private router: Router) {\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n      this.router.events.subscribe(event => {\n          if (event instanceof NavigationStart) {\n              if (this.keepAfterRouteChange) {\n                  // only keep for a single route change\n                  this.keepAfterRouteChange = false;\n              } else {\n                  // clear alert message\n                  this.clear();\n              }\n          }\n      });\n  }\n\n  getAlert(): Observable<any> {\n      return this.subject.asObservable();\n  }\n\n  success(message: string, keepAfterRouteChange = false) {\n      this.keepAfterRouteChange = keepAfterRouteChange;\n      this.subject.next({ type: 'success', text: message });\n  }\n\n  error(message: string, keepAfterRouteChange = false) {\n      this.keepAfterRouteChange = keepAfterRouteChange;\n      this.subject.next({ type: 'error', text: message });\n  }\n\n  clear() {\n      // clear by calling subject.next() without parameters\n      this.subject.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// import { environment } from '@environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  // public url =\"https://talentmitra-o5ryx.ondigitalocean.app\";\n  public url = '';\n  private code;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(email, password) {\n    return this.http.post<any>(`${this.url}/auth/login`, { email, password })\n    .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n    }));\n  }\n\n  register(user) {\n    return this.http.post<any>(`${this.url}/auth/register`, user)\n    .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n    }));\n  }\n\n  forgotPassword(email) {\n    console.log(\"came here with \"+email)\n    let user = { code , email };\n    var code=Math.floor(Math.random()*90000) + 10000;\n    this.code = code;\n    user.code = code;\n    user.email =email;\n    return this.http.post<any>(`${this.url}/auth/forgotpass`, user)\n    .pipe(map(data => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        data.code = this.code;\n        console.log(data);\n        return data;\n    }));\n  }\n\n  resetPassword(user) {\n    console.log(\"came here with \");\n    console.log(user);\n    return this.http.post<any>(`${this.url}/auth/resetPassword`, user)\n    .pipe(map(data => {\n        console.log(data);\n        return data;\n    }));\n  }\n\n  logout() {\n    // remove user from local storage and set current user to null\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n  loadingL = false;\n  lsubmitted = false;\n  returnUrl: string;\n  passwordErrorMsg: string;\n  sendStatus: boolean;\n  verifyCheck: boolean;\n  verifyErrorMsg: string;\n  passwordUpdateMsg: string;\n  code: number;\n  verifyCode:number;\n  password:string;\n  confirmPassword:string;\n  email:string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthServiceService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.passwordUpdateMsg = '';\n    this.verifyErrorMsg = '';\n    this.sendStatus = false;\n    this.verifyCheck =false;\n    this.passwordErrorMsg = '';\n    this.forgotPasswordForm = this.formBuilder.group({\n      email: ['', Validators.required]\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() { return this.forgotPasswordForm.controls; }\n\n  onforgotPassword() {\n    this.lsubmitted = true;\n    this.email = this.f.email.value;\n    // stop here if form is invalid\n    if (this.forgotPasswordForm.invalid) {\n      return;\n    }\n    this.loadingL = true;\n    this.authenticationService.forgotPassword(this.f.email.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.loadingL = false;\n          if (data.error) {\n            this.passwordErrorMsg = data.error;\n          } else {\n            this.passwordErrorMsg = '';\n            this.sendStatus = true;\n            this.verifyCode = data.code;\n          }\n          // this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.loadingL = false;\n        });\n  }\n\n  resetPassword() {\n    if(!this.verifyCheck){\n      if(this.verifyCode == this.code) {\n        this.verifyCheck = true;\n        this.verifyErrorMsg = 'Code Verified';\n      }\n\n    } else {\n      if(this.password===this.confirmPassword){\n        this.authenticationService.resetPassword({email:this.email,password:this.password})\n          .pipe(first())\n          .subscribe(\n            data => {\n              if (data.error) {\n                this.passwordUpdateMsg = \"Something went wrong. Try again\";\n              } else {\n                this.passwordUpdateMsg = \"Password changed! Login again.\"\n              }\n              this.router.navigate([this.returnUrl]);\n            },\n            error => {\n              this.passwordUpdateMsg = \"Something went wrong. Try again!!!!\";\n            });\n      } else{\n        this.passwordUpdateMsg = \"Passwords don't match\";\n     }\n    }\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-sm-offset-4\" style=\"margin-top:-31px;\">\n\n            <div class=\"form-box\">\n                <div *ngIf=\"!verifyCheck\">\n                    <div class=\"form-bottom\">\n                        <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onforgotPassword()\" name=\"form1\">\n\n                            <div class=\"md-form form-group\">\n                                <label for=\"email\">Email</label>\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': lsubmitted && f.email.errors }\" />\n                                <div *ngIf=\"lsubmitted && f.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group alert alert-danger\" role=\"alert\" *ngIf=\"passwordErrorMsg\">{{passwordErrorMsg}}\n                            </div>\n\n                            <div class=\"row d-flex align-items-center mb-4\">\n                                    <div class=\"text-center mb-3 col-md-12 form-group\">\n                                      <button [disabled]=\"loadingL\" class=\"btn btn-pink btn-rounded btn-block btn-rounded z-depth-1\">\n                                        <span *ngIf=\"loadingL\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                        Send Code</button>\n                                    </div>\n                            </div>\n\n                        </form>\n                        <p>or <a href=\"#/\">Login</a></p>\n                        <div *ngIf=\"sendStatus\">\n                            <p>A verification code has been sent to your mail ID. Check your mail.</p>\n                            <label class=\"sr-only\" for=\"form-email\">Enter code</label>\n                            <input type=\"text\" name=\"form-username\" [(ngModel)]=\"code\"\n                                placeholder=\"Enter Code\" class=\"form-username form-control\" required>\n                            <br>\n                            <div class=\"form-group alert alert-danger\" ng-show=\"verifyErrorMsg\">\n                                <p>{{verifyErrorMsg}}</p>\n\n                            </div>\n                            <div class=\"form-group\">\n                                <a class=\"btn btn-primary\" (click)=\"resetPassword()\">Verify</a>\n                            </div>\n                        </div>\n\n                    </div> <!-- form bottom -->\n                </div>\n            </div> <!-- form box -->\n\n            <div class=\"form-bottom\" *ngIf=\"verifyCheck\">\n                <div class=\"form-group\">\n                    <label class=\"sr-only\" for=\"form-email\">New Password</label>\n                    <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"New Password\"\n                        class=\"form-username form-control\" required>\n\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"sr-only\" for=\"form-email\">Confirm Password</label>\n                    <input type=\"password\" [(ngModel)]=\"confirmPassword\" placeholder=\"Confirm Password\"\n                        class=\"form-username form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <a class=\"btn btn-success\" (click)=\"resetPassword()\">Change password</a>\n                </div>\n                <div class=\"form-group\">\n\n                    <p ng-show=\"passwordUpdateMsg\">{{passwordUpdateMsg}} <a href=\"#/\">Login</a></p>\n                </div>\n            </div>\n        </div><!--  form box -->\n\n\n    </div> <!-- main form box ends -->\n\n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService } from './alert.service';\nimport { AuthServiceService } from './auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loadingL = false;\n  loadingR = false;\n  lsubmitted = false;\n  rsubmitted = false;\n  returnUrl: string;\n  registerForm: FormGroup;\n\n\n  step = 0;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private alertService: AlertService\n) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n        this.router.navigate(['/']);\n    }\n}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n\n    this.registerForm = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n      // convenience getter for easy access to form fields\n      get f() { return this.loginForm.controls; }\n      get r() { return this.registerForm.controls; }\n\n      onSubmit() {\n          this.lsubmitted = true;\n  \n          // reset alerts on submit\n          this.alertService.clear();\n  \n          // stop here if form is invalid\n          if (this.loginForm.invalid) {\n              return;\n          }\n  \n          this.loadingL = true;\n          this.authenticationService.login(this.f.email.value, this.f.password.value)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                      this.router.navigate([this.returnUrl]);\n                  },\n                  error => {\n                      this.alertService.error(error);\n                      this.loadingL = false;\n                  });\n      }\n\n      onRegister() {\n        this.rsubmitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loadingR = true;\n        this.authenticationService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', true);\n                    this.router.navigate(['/']);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loadingR = false;\n                });\n    }\n\n}\n","<!--Card-->\n<div class=\"card rgba-teal-strong darken-2 text-white text-center p-3 mt-2 mb-2\" style=\"height:100%\">\n\n  <!--Card content-->\n  <div class=\"card-body\">\n\n    <ul class=\"nav nav-tabs nav-justified md-tabs rgba-white-light\" id=\"myTabMD\" role=\"tablist\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active \" id=\"home-tab-md\" data-toggle=\"tab\" href=\"#home-md\" role=\"tab\"\n          aria-controls=\"home-md\" aria-selected=\"true\">REGISTER</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link \" id=\"profile-tab-md\" data-toggle=\"tab\" href=\"#profile-md\" role=\"tab\"\n          aria-controls=\"profile-md\" aria-selected=\"false\">LOGIN</a>\n      </li>\n    </ul>\n\n    <div class=\"tab-content\" id=\"myTabContentMD\">\n      <div class=\"tab-pane  active\" id=\"home-md\" role=\"tabpanel\" aria-labelledby=\"home-tab-md\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\" name=\"form2\">\n          <div class=\"md-form\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': rsubmitted && r.firstName.errors }\" />\n            <div *ngIf=\"rsubmitted && r.firstName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"r.firstName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n          <div class=\"md-form\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': rsubmitted && r.lastName.errors }\" />\n            <div *ngIf=\"rsubmitted && r.lastName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"r.lastName.errors.required\">Last Name is required</div>\n            </div>\n          </div>\n          <div class=\"md-form\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': rsubmitted && r.email.errors }\" />\n            <div *ngIf=\"rsubmitted && r.email.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"r.email.errors.required\">email is required</div>\n            </div>\n          </div>\n          <div class=\"md-form\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': rsubmitted && r.password.errors }\" />\n            <div *ngIf=\"rsubmitted && r.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"r.password.errors.required\">Password is required</div>\n              <div *ngIf=\"r.password.errors.minlength\">Password must be at least 6 characters\n              </div>\n            </div>\n          </div>\n          <div class=\"row d-flex align-items-center mb-4\">\n            <div class=\"text-center mb-3 col-md-12 form-group\">\n              <button [disabled]=\"loadingR\" class=\"btn btn-pink btn-rounded btn-block btn-rounded z-depth-1\">\n                <span *ngIf=\"loadingR\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Register</button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"tab-pane fade\" id=\"profile-md\" role=\"tabpanel\" aria-labelledby=\"profile-tab-md\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" name=\"form1\">\n          <div class=\"md-form form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': lsubmitted && f.email.errors }\" />\n            <div *ngIf=\"lsubmitted && f.email.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.email.errors.required\">email is required</div>\n            </div>\n          </div>\n          <div class=\"md-form form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control white-text\"\n              [ngClass]=\"{ 'is-invalid': lsubmitted && f.password.errors }\" />\n            <div *ngIf=\"lsubmitted && f.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n          </div>\n          <div class=\"row d-flex align-items-center mb-4\">\n            <div class=\"text-center mb-3 col-md-12 form-group\">\n              <button [disabled]=\"loadingL\" class=\"btn btn-pink btn-rounded btn-block btn-rounded z-depth-1\">\n                <span *ngIf=\"loadingL\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Sign in</button>\n            </div>\n          </div>\n        </form>\n        <div class=\"flex-row\" style=\"text-align:left\">\n          <a routerLink=\"/forgot\" class=\"white-text\">Forgot password?</a>\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n</div>","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MyMaterialModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { User } from '../_models/user';\nimport { AuthServiceService } from '../login/auth-service.service';\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css']\n})\nexport class PostDetailComponent implements OnInit {\n  comment: string;\n  commentReply: string;\n  postId: string;\n  showReplyForm: string = '';\n  post: any = {};\n  currentUser: any;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private postQueryService: PostQueryService,\n    private authenticationService: AuthServiceService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    // if (!this.currentUser) this.router.navigate(['/']);\n   }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.postId = params.id;\n      this.getPost();\n    });\n    \n  }\n\n  getPost() {\n    this.postQueryService.getPostById(this.postId, this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.post = res;\n    })\n  }\n  onComment() {\n    console.log(this.comment);\n    let postData = {\n      \"id\": this.postId,\n      \"commentText\" : this.comment,\n      \"commentedByName\" : this.currentUser.user.firstName+' '+this.currentUser.user.lastName,\n      \"commentedByEmail\": this.currentUser.user.email,\n      \"commentedOn\": new Date()\n    };\n    this.postQueryService.addPostsComment(\n      postData,\n      this.currentUser.token\n    ).subscribe((data) => {\n      this.getPost();\n      // this.Topics.push(data);\n    })\n  }\n\n  onCommentReply(id) {\n    console.log(id);\n    let postData = {\n      \"postId\": this.postId,\n      \"commentText\" : this.commentReply,\n      \"commentedOn\": new Date(),\n      \"commentId\" : id\n    };\n    this.postQueryService.addPostsCommentReply(\n      postData,\n      this.currentUser.token\n    ).subscribe((data) => {\n      this.getPost();\n      // this.Topics.push(data);\n    })\n  }\n\n  onShowReplyForm(id) {\n    this.showReplyForm = id;\n  }\n\n  getFileType(filename) {\n    var arr = filename.split('.');\n    var index = arr.length - 1;\n    return arr[index];\n  }\n\n  goToUserProfile(id) {\n    this.router.navigate(['blogs/profile/'+id]);\n  }\n\n  goBack() {\n    this.router.navigate(['../../../blog/'], {relativeTo: this.route});\n  }\n\n}\n","<!--Section: Post-->\n<section class=\"mt-4\">\n\n    <!--Grid row-->\n    <div class=\"row\">\n        <!--Grid column-->\n        <div class=\"col-md-12 mb-4\">\n            <!--Card-->\n            <div class=\"card mb-4\">\n                <!--Card content-->\n                <div class=\"card-body\">\n\n                    <p class=\"h6 my-4\">{{post.category}} </p>\n                    <div *ngIf=\"post.myFile\">\n                        <div *ngIf=\"getFileType(post.myFile)==='mp4'\">\n                            <div class=\"view overlay\">\n                                <div class=\"embed-responsive rounded-top\">\n                                    <video width=\"320\" height=\"240\" class=\"img-fluid\" controls>\n                                        <source [src]=\"post.myFile\" type=\"video/mp4\">\n                                        <source [src]=\"post.myFile\" type=\"video/ogg\">\n                                        Your browser does not support the video tag.\n                                    </video>\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            *ngIf=\"getFileType(post.myFile)==='jpg' || getFileType(post.myFile)==='bmp' || getFileType(post.myFile)==='png'|| getFileType(post.myFile)==='gif'\">\n                            <div class=\"view overlay\">\n                                <div class=\"embed-responsive rounded-top\">\n                                    <img [src]=\"post.myFile\" alt=\"\" class=\"img-fluid\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br><br>\n                    <div style=\"padding:3rem\" class=\"post\" [innerHTML]=\"post.content\"></div>\n\n                </div>\n\n            </div>\n            <!--/.Card-->\n\n            <!--Card About Author-->\n            <div class=\"card mb-4\">\n\n                <div class=\"card-header font-weight-bold\">\n                    <span>About author</span>\n                    <!-- <span class=\"pull-right\">\n                        <a href=\"\">\n                            <i class=\"fab fa-facebook-f mr-2\"></i>\n                        </a>\n                        <a href=\"\">\n                            <i class=\"fab fa-twitter mr-2\"></i>\n                        </a>\n                        <a href=\"\">\n                            <i class=\"fab fa-instagram mr-2\"></i>\n                        </a>\n                        <a href=\"\">\n                            <i class=\"fab fa-linkedin-in mr-2\"></i>\n                        </a>\n                    </span> -->\n                </div>\n\n                <!--Card content-->\n                <div class=\"card-body\">\n\n                    <div class=\"media d-block d-md-flex mt-3\">\n                        <img class=\"d-flex mb-3 mx-auto z-depth-1\"\n                            [src]=\"post.postedBy?.photo\"\n                            alt=\"Generic placeholder image\" style=\"width: 100px;\">\n                        <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n                            <a href=\"javascript:void(0)\" (click)=\"goToUserProfile(post.postedBy?._id)\">\n                                <h6 class=\"mt-0 font-weight-bold\">{{post.postedBy?.firstName+' '+post.postedBy?.lastName}}\n                                </h6>\n                            </a>\n                            <p *ngIf=\"post.postedBy.company\">Works at {{post.postedBy?.company}}</p>\n                            <p>{{post.postedBy?.aboutMe}}</p>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <!--/.Card-->\n\n            <!--Reply-->\n            <div class=\"card mb-3\" id=\"comment\">\n                <div class=\"card-header font-weight-bold\">Leave a reply</div>\n                <div class=\"card-body\">\n\n                    <!-- Default form reply -->\n                    <!-- Comment -->\n                    <div class=\"form-group\">\n                        <label for=\"replyFormComment\">Your comment</label>\n                        <textarea class=\"form-control\" id=\"replyFormComment\" rows=\"3\" [(ngModel)]=\"comment\"></textarea>\n                    </div>\n\n                    <div class=\"text-center mt-4\">\n                        <button class=\"btn btn-info btn-md\" (click)=\"onComment()\" type=\"submit\">Post</button>\n                    </div>\n                    <!-- Default form reply -->\n\n                </div>\n            </div>\n            <!--/.Reply-->\n\n            <!--Comments-->\n            <div class=\"card card-comments mb-3\" style=\"height:400px;overflow-y:scroll\">\n                <div class=\"card-header font-weight-bold\">{{post.comments?post.comments.length : 0}} comments</div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"post.comments\">\n                        <div class=\"media d-block d-md-flex mt-4\" *ngFor=\"let comment of post.comments\">\n                            <img class=\"d-flex mb-3 mx-auto \"\n                                [src]=\"comment.commentedBy?.photo\"\n                                alt=\"Generic placeholder image\">\n                            <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n                                <h6 class=\"mt-0 font-weight-bold\">{{comment.commentedBy?.firstName+' '+comment.commentedBy?.lastName}}\n                                    <a class=\"pull-right\" (click)=\"onShowReplyForm(comment._id)\">\n                                        <i class=\"fas fa-reply\"></i>\n                                    </a>\n                                </h6>\n                                {{comment.commentText}}\n                                <div *ngIf=\"comment.commentReplies\">\n                                    <div class=\"media d-block d-md-flex mt-3\"\n                                        *ngFor=\"let commentReply of comment.commentReplies\">\n                                        <img class=\"d-flex mb-3 mx-auto \"\n                                            [src]=\"commentReply.commentedBy?.photo\"\n                                            alt=\"Generic placeholder image\">\n                                        <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n                                            <h6 class=\"mt-0 font-weight-bold\">{{commentReply.commentedBy?.firstName+' '+commentReply.commentedBy?.lastName}}\n                                            </h6>\n                                            {{commentReply.commentText}}\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Quick Reply -->\n                                <div class=\"form-group mt-4\" [id]=\"comment._id\" *ngIf=\"showReplyForm === comment._id\">\n                                    <label for=\"quickReplyFormComment\">Your comment</label>\n                                    <textarea class=\"form-control\" id=\"quickReplyFormComment\" rows=\"5\"\n                                        [(ngModel)]=\"commentReply\"></textarea>\n\n                                    <div class=\"text-center\">\n                                        <button class=\"btn btn-info btn-sm\"\n                                            (click)=\"onCommentReply(comment._id)\">Post</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--/.Comments-->\n\n\n\n        </div>\n        <!--Grid column-->\n    </div>\n    <!--Grid row-->\n\n</section>\n<!--Section: Post-->","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { Post } from '../_models/post';\nimport { User } from '../_models/user';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { HttpEventType, HttpEvent } from '@angular/common/http';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  currentUser: User;\n  posts = [];\n  Posts: any = [];\n  category: any = '';\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthServiceService,\n    private postQueryService: PostQueryService,\n    private route: ActivatedRoute\n  ) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    // if (!this.currentUser) this.router.navigate(['/']);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.category = params && params.id ? params.id : '';\n      this.getPosts();\n    });\n  }\n\n  getPosts() {\n    this.postQueryService.getPosts(this.category, this.currentUser.token).subscribe((res) => {\n      this.Posts = res['posts'];\n    })\n  }\n  \n  gotoDetails(id) {\n    this.router.navigate(['blogs/post-detail/'+id]);\n  }\n\n  getFileType(filename) {\n    var arr = filename.split('.');\n    var index = arr.length - 1;\n    return arr[index];\n  }\n}\n","<!--Grid row-->\n<div class=\"row mb-4\">\n  <!--Grid column-->\n  <div class=\"col-lg-5 col-md-12 mb-4 mr-4\" *ngFor=\"let post of Posts;\">\n\n    <!--Card-->\n    <div class=\"card\">\n      <div *ngIf=\"post.myFile\">\n        <div *ngIf=\"getFileType(post.myFile)==='mp4'\">\n          <div class=\"view overlay\">\n            <div class=\"embed-responsive rounded-top\" style=\"height:250px;text-align: -webkit-center;\">\n              <video width=\"320\" height=\"240\" controls>\n                <source [src]=\"post.myFile\" type=\"video/mp4\">\n                <source [src]=\"post.myFile\" type=\"video/ogg\">\n                Your browser does not support the video tag.\n              </video>\n            </div>\n          </div>\n        </div>\n        <div\n          *ngIf=\"getFileType(post.myFile)==='jpg' || getFileType(post.myFile)==='bmp' || getFileType(post.myFile)==='gif' || getFileType(post.myFile)==='png'\">\n          <div class=\"view overlay\">\n            <div class=\"embed-responsive rounded-top\" style=\"height: 250px;text-align: -webkit-center;\">\n              <img [src]=\"post.myFile\" class=\"img-fluid\" alt=\"\" style=\"width:100%\">\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!--Card content-->\n      <div class=\"card-body\" style=\"font-size:smaller\">\n        <h5 class=\"mt-1 mb-2 pt-1 pb-1 badge bg-secondary\">{{post.category}}</h5>\n        <h6 class=\"mt-1 pt-1 pb-1\" style=\"color:#797979\">{{post.shortDescription|uppercase}}</h6>\n        <div class=\"post\" [innerHTML]=\"post.content|truncateText:30\" style=\"height:99px;overflow:hidden\"></div>\n        <div class=\"clearfix\"></div>\n        <div class=\"btn btn-sm teal white-text\" (click)=\"gotoDetails(post._id)\">Read More</div>\n        <hr>\n        <div>\n          <span class=\"mt-0 \" style=\"float:right;\">{{post.postedBy?.firstName+' '+post.postedBy?.lastName}}</span>\n          <span class=\"mt-0  pr-2\" style=\"color: gray;float:right;\">Posted By:</span>\n          <span class=\"mt-0  pr-2\" style=\"\"><i class=\"fa fa-clock-o\"></i> {{post.postedOn| date:\"dd/MM/yy\"}}</span>\n        </div>\n      </div>\n\n    </div>\n    <!--/.Card-->\n\n  </div>\n  <!--Grid column-->\n</div>\n<!--Grid row-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sections',\n  templateUrl: './sections.component.html',\n  styleUrls: ['./sections.component.css']\n})\nexport class SectionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Patna\n                </div>\n                <div class=\"card-body\">\n                    <ul>\n                        <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                        <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                    </ul>\n\n                </div>\n                <div class=\"card-header\">\n                    Bangalore\n                </div>\n                <div class=\"card-body\">\n                        <ul>\n                            <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                            <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                        </ul>\n    \n                    </div>\n                <div class=\"card-header\">\n                    Hyderabad\n                </div>\n                <div class=\"card-body\">\n                        <ul>\n                            <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                            <li><strong>Devvrat Priyadarshi</strong>+917909076207</li>\n                        </ul>\n    \n                    </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { User } from '../_models/user';\nimport { AuthServiceService } from '../login/auth-service.service';\n\n\n@Component({\n  selector: 'app-topic-detail',\n  templateUrl: './topic-detail.component.html',\n  styleUrls: ['./topic-detail.component.css']\n})\nexport class TopicDetailComponent implements OnInit {\n  comment: string;\n  topicId: string;\n  topic: any = {};\n  currentUser: any;\n  commentReply: any;\n  showReplyForm: any;\n  \n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private postQueryService: PostQueryService,\n    private authenticationService: AuthServiceService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) this.router.navigate(['/']);\n   }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.topicId = params.id;\n      this.getTopic();\n    });\n    \n  }\n\n  getTopic() {\n    this.postQueryService.getTopicById(this.topicId, this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.topic = res;\n    })\n  }\n  onComment() {\n    let postData = {\n      \"id\": this.topicId,\n      \"commentText\" : this.comment,\n      \"commentedOn\": new Date()\n    };\n    this.postQueryService.addComment(\n      postData,\n      this.currentUser.token\n    ).subscribe((data) => {\n      this.getTopic();\n      // this.Topics.push(data);\n    })\n  }\n\n  onCommentReply(id) {\n    console.log(id);\n    let postData = {\n      \"postId\": this.topicId,\n      \"commentText\" : this.commentReply,\n      \"commentedOn\": new Date(),\n      \"commentId\" : id\n    };\n    this.postQueryService.addTopicsCommentReply(\n      postData,\n      this.currentUser.token\n    ).subscribe((data) => {\n      this.getTopic();\n      // this.Topics.push(data);\n    })\n  }\n\n  onShowReplyForm(id) {\n    this.showReplyForm = id;\n  }\n\n  goBack() {\n    this.router.navigate(['../../../forum/'], {relativeTo: this.route});\n  }\n}\n","<div class=\"mb-2\" style=\"margin-top: -3rem;\">\n    <a (click)=\"goBack()\"> <i class=\"fa fa-arrow-left\"></i> See all topics</a>\n</div>\n\n<!--Section: Post-->\n<section class=\"mt-4\">\n    <!--Grid row-->\n    <div class=\"row\">\n        <!--Grid column-->\n        <div class=\"col-md-12 mb-4\">\n            <!--Card-->\n            <div class=\"card mb-4\">\n                <!--Card content-->\n                <div class=\"card-body\">\n                    <p class=\"h6 my-4\">{{topic.title}} </p>\n                    <p>{{topic.description}}</p>\n                </div>\n                <div class=\"card-footer\">\n                   <span class=\"pull-right\"> <i class=\"fa fa-clock-o\"></i> Posted on : {{topic.postedOn| date:\"dd MMM\"}} @ {{topic.postedOn| date:\"HH:mm\"}}</span>\n                </div>\n            </div>\n            <!--/.Card-->\n            <!--Reply-->\n            <div class=\"card mb-3\" id=\"comment\">\n                <div class=\"card-header font-weight-bold\">Leave a reply</div>\n                <div class=\"card-body\">\n                    <!-- Default form reply -->\n                    <!-- Comment -->\n                    <div class=\"form-group\">\n                        <label for=\"replyFormComment\">Your comment</label>\n                        <textarea class=\"form-control\" id=\"replyFormComment\" rows=\"3\" [(ngModel)]=\"comment\"></textarea>\n                    </div>\n                    <div class=\"text-center mt-4\">\n                        <button class=\"btn btn-info btn-md\" (click)=\"onComment()\" type=\"submit\">Post</button>\n                    </div>\n                    <!-- Default form reply -->\n\n                </div>\n            </div>\n            <!--/.Reply-->\n            <!--Comments-->\n            <div class=\"card card-comments mb-3\" style=\"height:400px;overflow-y:scroll\">\n                <div class=\"card-header font-weight-bold\">{{topic.comments?topic.comments.length : 0}} comments</div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"topic.comments\">\n                        <div class=\"media d-block d-md-flex mt-4\" *ngFor=\"let comment of topic.comments\">\n                            <img class=\"d-flex mb-3 mx-auto \"\n                                src=\"https://mdbootstrap.com/img/Photos/Avatars/img (20).jpg\"\n                                alt=\"Generic placeholder image\">\n                            <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n                                <h6 class=\"mt-0 font-weight-bold\">{{comment.commentedByName}}\n                                    <a class=\"pull-right\" (click)=\"onShowReplyForm(comment._id)\">\n                                        <i class=\"fas fa-reply\"></i>\n                                    </a>\n                                </h6>\n                                {{comment.commentText}}\n                                <div *ngIf=\"comment.commentReplies\">\n                                    <div class=\"media d-block d-md-flex mt-3\"\n                                        *ngFor=\"let commentReply of comment.commentReplies\">\n                                        <img class=\"d-flex mb-3 mx-auto \"\n                                            src=\"https://mdbootstrap.com/img/Photos/Avatars/img (27).jpg\"\n                                            alt=\"Generic placeholder image\">\n                                        <div class=\"media-body text-center text-md-left ml-md-3 ml-0\">\n                                            <h6 class=\"mt-0 font-weight-bold\">{{commentReply.commentedByName}}\n                                            </h6>\n                                            {{commentReply.commentText}}\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Quick Reply -->\n                                <div class=\"form-group mt-4\" [id]=\"comment._id\" *ngIf=\"showReplyForm === comment._id\">\n                                    <label for=\"quickReplyFormComment\">Your comment</label>\n                                    <textarea class=\"form-control\" id=\"quickReplyFormComment\" rows=\"5\"\n                                        [(ngModel)]=\"commentReply\"></textarea>\n\n                                    <div class=\"text-center\">\n                                        <button class=\"btn btn-info btn-sm\"\n                                            (click)=\"onCommentReply(comment._id)\">Post</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--/.Comments-->\n        </div>\n        <!--Grid column-->\n    </div>\n    <!--Grid row-->\n</section>\n<!--Section: Post-->","import { Component, OnInit } from '@angular/core';\n\nimport { Topic } from '../_models/topic';\nimport { PostQueryService } from '../_services/post-query.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthServiceService } from '../login/auth-service.service';\n\n@Component({\n  selector: 'app-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.css']\n})\nexport class TopicListComponent implements OnInit {\n  topics = [];\n  Topics: any = [];\n  currentUser: any;\n  category: any = '';\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private postQueryService: PostQueryService,\n    private authenticationService: AuthServiceService\n  ) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) this.router.navigate(['/']);\n   }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.category = params && params.id ? params.id : '';\n      this.getTopics();\n    });\n  }\n  getTopics() {\n    this.postQueryService.getTopics(this.category, this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.Topics = res;\n    })\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['forum/topic-detail/'+id]);\n  }\n\n  incLike() {\n    this.postQueryService.like().subscribe((res) => {\n      console.log(res);\n    })\n  }\n\n  decLike() {\n    this.postQueryService.like().subscribe((res) => {\n      console.log(res);\n    })\n    \n  }\n\n\n}\n","\n     <div class=\"post\"  *ngFor=\"let topic of Topics;\">\n        <div class=\"wrap-ut pull-left\">\n            <div class=\"userinfo pull-left\">\n                <div class=\"avatar\">\n                    <img src=\"../../assets/images/birdie.svg\" alt=\"\" style=\"height:37px\">\n                    <!-- <div class=\"status green\">&nbsp;</div> -->\n                </div>\n\n                <div class=\"icons\">\n                    <!-- <i *ngIf=\"!topic.liked\" class=\"fa fa-thumbs-up grey-text\"></i> -->\n                    \n                    <!-- <i *ngIf=\"topic.liked\" class=\"fa fa-thumbs-up blue-text\"></i> -->\n                </div>\n            </div>\n            <div class=\"posttext pull-left\">\n                <h2><a (click)=\"gotoDetails(topic._id)\">{{topic.title}}</a></h2>\n                <p>{{topic.description}}</p>\n            </div>\n            <div class=\"clearfix\"></div>\n        </div>\n        <div class=\"postinfo pull-left\">\n            <div class=\"comments\">\n                <div class=\"commentbg\">\n                    {{topic.comments.length}}\n                    <div class=\"mark\"></div>\n                </div>\n\n            </div>\n            <!-- <div class=\"views\"><i class=\"fa fa-eye\"></i> 1,568</div> -->\n            <div class=\"time\"><i class=\"fa fa-clock-o\"></i> {{topic.postedOn| date:\"dd/MM/yy\"}}</div>                                    \n        </div>\n        <div class=\"clearfix\"></div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models/user';\nimport { AuthServiceService } from '../login/auth-service.service';\n\n\nimport { UserService } from '../_services/user.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent implements OnInit {\n  postContent: FormGroup;\n  currentUser: any;\n  error: boolean = false;\n  id: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authenticationService: AuthServiceService,\n    private userService: UserService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) { \n      this.router.navigate(['/']);\n    } else {\n      // this.id = this.currentUser.user.id;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getUserDetails();\n    console.log(this.currentUser);\n    this.postContent = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['',Validators.required],\n      company: ['',Validators.required],\n      aboutMe: [''],\n      myFile: ['']\n    });\n  }\n  getUserDetails() {\n    this.userService.getUserDetails(this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.currentUser['user'] = res['user'];\n      this.postContent = this.formBuilder.group({\n        firstName: [this.currentUser.user.firstName, Validators.required],\n        lastName: [this.currentUser.user.lastName, Validators.required],\n        email: [this.currentUser.user.email,Validators.required],\n        company: [this.currentUser.user.company,Validators.required],\n        aboutMe: [this.currentUser.user.aboutMe],\n        myFile: [this.currentUser.user.photo]\n      });\n    })\n  }\n\n  uploadFile(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.postContent.patchValue({\n      myFile: file\n    });\n    this.postContent.get('myFile').updateValueAndValidity()\n  }\n\n  onSubmit() {\n    let profileData = {\n      \"firstName\" : this.postContent.value.firstName,\n      \"lastName\" : this.postContent.value.lastName,\n      \"email\" : this.postContent.value.email,\n      \"company\" : this.postContent.value.company,\n      \"aboutMe\" : this.postContent.value.aboutMe,\n      \"myFile\"  :this.postContent.value.myFile\n    }\n    this.userService.updateProfile(\n      profileData,\n      this.currentUser.token\n    ).subscribe((data) => {\n      if (data === 'error') {\n        this.error = true;\n      }\n      this.getUserDetails();\n      alert(\"Profile Updated Successfully\");\n      console.log(data);\n    })\n  }\n\n}\n","<div class=\"container\">\n  <h1>Edit Profile</h1>\n  <hr>\n  <div class=\"row\">\n    <!-- edit form column -->\n    <div class=\"col-md-12 personal-info\">\n      <div class=\"alert alert-info alert-dismissable\" *ngIf=\"error\">\n        <a class=\"panel-close close\" data-dismiss=\"alert\" (click)=\"error=!error\">×</a>\n        <i class=\"fa fa-coffee\"></i>\n        This is an <strong>.alert</strong>. Use this to show important messages to the user.\n      </div>\n      <h3>Personal info</h3>\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"postContent\" (ngSubmit)=\"onSubmit()\" name=\"form1\">\n        <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <div class=\"text-center\">\n              <!-- <img src=\"//placehold.it/100\" class=\"avatar img-circle\" alt=\"avatar\"> -->\n              <img [src]=\"currentUser.user?.photo\" class=\"avatar img-circle\" alt=\"avatar\" style=\"height:150px\">\n              <h6>Upload a different photo...</h6>\n              <input type=\"file\" class=\"form-control\" (change)=\"uploadFile($event)\">\n            </div>\n          </div>\n          <div class=\"col-sm-8\">\n            <div class=\"form-group\">\n              <label class=\"col-lg-3 control-label\">First name:</label>\n              <div class=\"col-lg-8\">\n                <input class=\"form-control\" type=\"text\" value=\"Jane\" formControlName=\"firstName\">\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"col-lg-3 control-label\">Last name:</label>\n              <div class=\"col-lg-8\">\n                <input class=\"form-control\" type=\"text\" value=\"Bishop\" formControlName=\"lastName\">\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"col-lg-3 control-label\">Company:</label>\n              <div class=\"col-lg-8\">\n                <input class=\"form-control\" type=\"text\" value=\"\" formControlName=\"company\">\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"col-lg-3 control-label\">About Me:</label>\n              <div class=\"col-lg-8\">\n                <input class=\"form-control\" type=\"text\" value=\"\" formControlName=\"aboutMe\">\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"col-lg-3 control-label\">Email:</label>\n              <div class=\"col-lg-8\">\n                <input class=\"form-control\" type=\"text\" value=\"janesemail@gmail.com\" formControlName=\"email\" disabled>\n              </div>\n            </div>\n            <!-- <div class=\"form-group\">\n              <label class=\"col-md-3 control-label\">Password:</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\" type=\"password\" value=\"11111122333\" formControlName=\"password\">\n              </div>\n            </div> -->\n            <!-- <div class=\"form-group\">\n              <label class=\"col-md-3 control-label\">Confirm password:</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\" type=\"password\" value=\"11111122333\" formControlName=\"cpassword\">\n              </div>\n            </div> -->\n            <div class=\"form-group\">\n              <label class=\"col-md-3 control-label\"></label>\n              <div class=\"col-md-8\">\n                <input class=\"btn btn-primary\" value=\"Save Changes\" type=\"submit\">\n                <span></span>\n                <input type=\"reset\" class=\"btn btn-default\" value=\"Cancel\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<hr>","import { Component, OnInit } from '@angular/core';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models/user';\nimport { AuthServiceService } from '../login/auth-service.service';\nimport { PostQueryService } from '../_services/post-query.service';\n\n\nimport { UserService } from '../_services/user.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  postContent: FormGroup;\n  currentUser: any;\n  error: boolean = false;\n  id: any;\n  user:any;\n  posts: any = [];\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authenticationService: AuthServiceService,\n    private userService: UserService,\n    private postQueryService: PostQueryService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    if (!this.currentUser) { \n      this.router.navigate(['/']);\n    } else {\n      // this.id = this.currentUser.user.id;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      console.log(params);\n      this.id = params && params.id ? params.id : '';\n      this.gerUserProfile();\n    });\n\n  }\n  gerUserProfile() {\n    this.userService.gerUserProfile(this.id,this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.user = res;\n      this.getUserThreads();\n    })\n  }\n\n  getUserThreads() {\n    this.postQueryService.getUserThreads(this.user.email, this.currentUser.token).subscribe((res) => {\n      console.log(res);\n      this.posts = res;\n    });\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['blogs/post-detail/'+id]);\n  }\n}\n","<div class=\"row py-5 px-4\">\n    <div class=\"col-md-12 mx-auto\">\n        <!-- Profile widget -->\n        <div class=\"bg-white shadow rounded overflow-hidden\">\n            <div class=\"px-4 pt-0 pb-4 cover\">\n                <div class=\"media align-items-end profile-head\">\n                    <div class=\"profile mr-3\"><img [src]=\"user?.photo\" style=\"height:150px\">Edit profile</div>\n                    <div class=\"media-body mb-5 text-white\">\n                        <h4 class=\"mt-0 mb-0\">{{user?.firstName + ' ' + user?.lastName}}</h4>\n                        <p class=\"small mb-4\"> <i class=\"fas fa-map-marker-alt mr-2\"></i>{{user?.company}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"bg-light p-4 d-flex justify-content-end text-center\">\n                <ul class=\"list-inline mb-0\">\n                    <li class=\"list-inline-item\">\n                        <h5 class=\"font-weight-bold mb-0 d-block\">{{posts.length}}</h5><small class=\"text-muted\"> <i\n                                class=\"fas fa-image mr-1\"></i>Posts</small>\n                    </li>\n                    <!-- <li class=\"list-inline-item\">\n                            <h5 class=\"font-weight-bold mb-0 d-block\">745</h5><small class=\"text-muted\"> <i class=\"fas fa-user mr-1\"></i>Followers</small>\n                        </li>\n                        <li class=\"list-inline-item\">\n                            <h5 class=\"font-weight-bold mb-0 d-block\">340</h5><small class=\"text-muted\"> <i class=\"fas fa-user mr-1\"></i>Following</small>\n                        </li> -->\n                </ul>\n            </div>\n            <div class=\"px-4 py-3\">\n                <h5 class=\"mb-0\">About</h5>\n                <div class=\"p-4 rounded shadow-sm bg-light\">\n                    <p class=\"font-italic mb-0\">{{user?.aboutMe}}</p>\n                </div>\n            </div>\n            <div class=\"py-4 px-4\">\n                <div class=\"d-flex align-items-center justify-content-between mb-3\">\n                    <h5 class=\"mb-0\">All Posts</h5>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-6 mb-2 pr-lg-1\" *ngFor=\"let post of posts\">\n                        <a href=\"javascript:void(0)\" (click)=\"gotoDetails(post._id)\" rel=\"bookmark\">\n                        <img [src]=\"post.myFile\" *ngIf=\"post.myFile\" class=\"img-fluid rounded shadow-sm\"\n                            style=\"\">\n                        <img src=\"../../assets/images/pen.png\" *ngIf=\"!post.myFile\" class=\"img-fluid rounded shadow-sm\"\n                            style=\"\">\n                            </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}